.content-box {
	margin: 0 auto;
	max-width: 36em;
	width: 85vw;
	@media (min-width: 481px) {width: 82.5vw;}
	@media (min-width: 769px) {width: 80vw;}
}

.title--mini {
  // Add top padding so that if the user clicks the first blog post while the
  // page is scrolled to the top, the title on the actual blog page does not
  // appear to jump
  @include first(1) {padding-top: 0.325em;}
	padding-bottom: vr(0.25);
}

.publish-date {
	padding-left: 0.1em;
}

.description > p {
  padding-top: vr(0.5);
  @media (min-width: 481px) {
    @include first(1) {padding-top: vr(0.25);}
  }
}

.title {
	margin-bottom: vr(1);
	padding: 0.25em 0 0.25em;
	border: 0.075em solid $colour-black;
	border-radius: 0.15em;
}

.subtitle {
	margin: vr(1.5) 0 vr(0.5);
	display: inline-block;
	padding: 0 0.25em 0.25em 0.05em;
	border-top: 0.12em solid $colour-black;
	border-right: 0.12em solid $colour-black;
	border-bottom: 0.12em solid $colour-black;
}

.subsubtitle {
	margin-top: vr(0.5);
	margin-bottom: 0;
}

p {
	margin: 0;
}

p + p,
p + picture,
picture + p,
picture + picture {
	padding-top: vr(1);
	padding-bottom: 0;
}

ol, .u-list {
  margin: vr(0.5) 0 0;
  > li {
    margin-top: vr(1);
		@include first(1) {margin-top: vr(0.5);}
    > p {
      margin: 0;
      padding-top: vr(0.5);
    }
  }
}

ol + p,
.u-list + p {
	margin-top: vr(1.5);
}

.references {
	margin-top: 0;
	> li {
		margin-top: vr(0.5);
	}
}

kbd {
  border: 2px solid lighten($colour-dark-gray, 12%);
	padding: 0 0.3em 0.2em;
}

code,
.input {
	display: inline-block;
	vertical-align: sub;
	max-width: 100%;
	overflow: auto;
	padding: 0 0.3em 0;
}

code,
kbd,
.input {
	background-color: $colour-light-gray;
	border-radius: 0.2em;
}

.code-block {
	background-color: $colour-light-gray;
  margin: vr(1) 0;
  padding-right: vr(2);
	overflow: hidden;
	border-radius: 0.2em;
	> code {
    padding: vr(1);
    width: calc(100% + vr(2));
		// padding: 0 0 0.15em;
  }
  + .subtitle {
    margin-top: vr(.5);
  }
}

.ui-flow {
	@extend kbd;
}

picture {
	display: block;
  &>img:not(.logo) {
    max-width: 100%;
    margin: 0 auto;
    display: block;
    box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.5);
  }
}

// TODO: - move the below code to a partial that is specific to the about page or contact form
//    	 - perhaps reorganise the code from _typography and _pages

$left-pad: 0.8rem; // used to pad input fields

form {
	max-width: 800px;
}

.input-group {
	margin: 1em 0;
}

input,
textarea {
	display: block;
	padding: 1em $left-pad 0.3em;
	width: 95%;
	border: 1px dashed $colour-dark-gray;
	background-color: $colour-white;
	&:focus {
		border-color: $colour-orange;
		border-style: solid;
		background-color: $colour-white;
		outline: none;
	}
}

button {
  background-color: $colour-orange;
  color: $colour-white;
  border: 0;
  padding: 0.5em 1em;
  margin-top: 1em;
	outline-color: $colour-blue;
	outline-width: 2px;
}

/////////////////////////////////////////////////////
//////////// Label-Placeholder Wizardry /////////////
// Based on: http://codepen.io/tonystar/pen/JRLaKw //
/////////////////////////////////////////////////////

.float-label {
	display: block;
  position: relative;


  label {
    position: absolute;
    left: $left-pad;
    cursor: text;
		font-family: $code-font;
    transition: all ease 0.2s;
		background-color: $colour-white;

		// Style for the label when:
		// (1) focused
		top: 0.25em;
    font-size: 60%;
		line-height: calc(100% + 0.25em); // this combined with the background-color above, prevent text entered in the text area from overlapping the label
		color: $colour-orange;
  }


	// Style for the label when:
	// (1) not focused AND
  input, textarea {
		// (2) not empty
		&:not(:focus) {
			outline: none;
			+ label {
				color: $colour-dark-gray;
			}
		}

		// (2) empty
		// :placeholder-shown is, as far as I know, the only way to check if an input field is empty using CSS
		// It requires that the input field has a placeholder though :/
    &:placeholder-shown:not(:focus) + * {
      font-size: 100%;
			color: $colour-dark-gray;
			top: 0.55em;
		}
  }
}
